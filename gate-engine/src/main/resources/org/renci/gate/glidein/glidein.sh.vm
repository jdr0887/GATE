#!/bin/bash                                                                                 

START_DIR=`pwd`
ARCH=`uname -m`


function init() {

    if [ ! -e "$HOME/.science-portal.rc" ]; then
	echo 'Unable to find ~/.science-portal.rc - Exiting...'
	exit 1                                                 
    fi                                                         
    . $HOME/.science-portal.rc                                 
    
    if [ "x$GLIDEINS_WORK_DIR" = "x" ]; then
	echo "GLIDEINS_WORK_DIR is not set in .science-portal.rc"
	exit 1                                                   
    fi     
    
#############################################################################
#
#  pre-flight checks
    
    if [ ! -e "$APPLICATION_DIR/apps/java/current/bin/java" ]; then
	echo "FATAL: Java does not exist under APPLICATION_DIR"
	exit 1
    fi 
    
    if [ "x$EA_CLIENT_HOME" = "x" -o ! -e "$EA_CLIENT_HOME" ]; then
	echo "FATAL: EA_CLIENT_HOME is not defined or does not exist"
	exit 1
    fi
    
    
#############################################################################
#
#  Environment cleanup
    
    
# unset condor environment from Globus jobmanager
    /usr/bin/env | grep _CONDOR | while read LINE; do 
	KEY=`echo $LINE | sed 's/=.*//'`
	unset $KEY
    done


#############################################################################
#
#  OS and glidein path
    
# default is RHEL 3/4
    OS_NAME="RHEL"
    OS_MAJOR_VERSION="3"
    
    if [ -e /etc/redhat-release ]; then
	OS_NAME="RHEL"
	OS_MAJOR_VERSION=`cat /etc/redhat-release | head -n 1 | sed -r 's/(^[^0-9]+|[\. ].+)//g'`
    fi
    
    if [ -e /etc/debian_version ]; then
	OS_NAME="Debian"
	OS_MAJOR_VERSION=`cat /etc/debian_version | sed 's/[\/\.].*//'`
    fi
    
    export CONDOR_SBIN_PATH=glidein/$OS_NAME/$OS_MAJOR_VERSION/x86
    
}

function create_work_dir() {
    unset TMPDIR
    TARGETS="$GLIDEINS_WORK_DIR $OSG_WN_TMP $OSG_DATA/engage/tmp "
    for DER in $TARGETS; do
        WORK_DIR=`/bin/mktemp -d -p $DER job.XXXXXXXXXX`
        if [ $? = 0 ]; then
            echo "Created workdir in $DER"
            export WORK_DIR
            return 0
        fi
        echo "Failed to create workdir in $DER"
    done
    return 1
}


function download_glidein_data()  {
    export GLIDEIN_PARENT_ID=${glideinParentId}
    if [ -e /usr/bin/uuidgen ]; then
	export GLIDEIN_CHILD_ID=`/usr/bin/uuidgen`
    else                                   
	echo 'uuidgen does not exist. Exiting...'
	exit 1                                
    fi                                           
    
    echo
    echo "Running on:" `hostname -f`
    
    echo
    echo "Started in $START_DIR"
    echo "Glidein child id is $GLIDEIN_CHILD_ID"
    echo "WORK_DIR is $WORK_DIR"
    
    rm -rf $WORK_DIR
    mkdir -p $WORK_DIR

	cat condor_config | sed 's:@GLIDEIN_CHILD_ID@:'$GLIDEIN_CHILD_ID':g' | sed 's:@OSG_DATA@:'$OSG_DATA':g' | sed 's:@OSG_APP@:'$OSG_APP':g' | sed 's:@OSG_WN_TMP@:'$OSG_WN_TMP':g' > condor_config.new
	rm condor_config; mv condor_config.new condor_config
	cp condor_config $WORK_DIR
	chmod 755 user-job-wrapper.sh
	cp user-job-wrapper.sh $WORK_DIR
    
    cd $WORK_DIR || {
	echo "Unable to cd to $WORK_DIR. Exiting..."
	exit 1                                      
    }                                               
    
    wget -q -O glidein.tar.gz http://beluga.renci.org/glideins/glidein.tar.gz
    tar xzfm glidein.tar.gz                                   
    rm -f glidein.tar.gz  
    
    wget -q -O advertise-capabilities http://beluga.renci.org/scienceapps/environment/advertise-capabilities
    chmod 755 advertise-capabilities

}

function start_condor() {

#############################################################################
    
    echo
    echo "Contents of " `pwd` " is:"
    echo
    ls -la
    
    
    echo
    echo "Condor config file:"
    echo
    cat $WORK_DIR/condor_config
    
#############################################################################
#                                                                            
#  run the glidein                                                           
#                                                                            
    
    echo
    echo "Starting Condor..."
    
    export CONDOR_CONFIG=$WORK_DIR/condor_config
    export _condor_CONODR_CONFIG=$CONDOR_CONFIG 
    
    export _condor_GLIDEIN_HOST=`/bin/hostname -f`
    export _condor_UID_DOMAIN="$_condor_GLIDEIN_HOST"
    export _condor_FILESYSTEM_DOMAIN="$_condor_GLIDEIN_HOST"
    
    export _condor_GSI_DAEMON_PROXY="$X509_USER_PROXY"
    
    export _condor_LOCAL_DIR="$WORK_DIR"
    export _condor_SBIN="$WORK_DIR/$CONDOR_SBIN_PATH"  
    
    export _condor_STARTD_NOCLAIM_SHUTDOWN="${siteMaxNoClaimTimeSecs}"
    export _condor_DaemonStopTime="DaemonStartTime+${siteMaxRunTimeSecs}"
    
    ${_condor_SBIN}/condor_master -dyn -f -r ${siteMaxRunTimeMins}
    EXIT_CODE=$?                                 
    
    cd $WORK_DIR/log.*
    for LOG in `ls *Log`; do
	echo
	echo "Tail of $LOG:"
	echo
	tail -n 100 $LOG
	echo
    done

#############################################################################
#
#  cleanup 
#
    
    echo
    echo "Running cleanup (this is part of every run)"
    
    cd $HOME
    rm -rf $WORK_DIR
    
#############################################################################
#
#  exit
#
    
    exit $EXIT_CODE
    
    
}

init
create_work_dir
download_glidein_data
start_condor


# eof
