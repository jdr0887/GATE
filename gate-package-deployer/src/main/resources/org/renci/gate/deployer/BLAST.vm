
function setup() {

	# first some basic setup
	mkdir -p $APPLICATION_DIR
	mkdir -p $APPLICATION_DIR/apps
	mkdir -p $APPLICATION_DIR/bin
	mkdir -p $APPLICATION_DIR/logs
	mkdir -p $APPLICATION_DIR/src

	for BINARY in `ls -al $APPLICATION_DIR/bin | grep "${package}/${version}"`; do
		rm $APPLICATION_DIR/bin/$BINARY
	done

	# install the environement files
	pushd $APPLICATION_DIR; rm -f setup.sh; wget -q ${sourceURL}/environment/setup.sh; popd

}

function install() {

	# determine os
	OS_PLATFORM=`uname -m`
	OS_NAME="Unknown"
	OS_MAJOR_VERSION="0"
	
	if [ -e /etc/redhat-release ]; then
	    OS_NAME="RHEL"
	fi
	if [ -e /etc/debian_version ]; then
	    OS_NAME="Debian"
	fi
	
	mkdir -p $APPLICATION_DIR/src/${package}
	cd $APPLICATION_DIR/src/${package}
	rm -rf ncbi* blast*
	
	# on RHEL x64 - use binaries
	if [ "x$OS_NAME" = "xRHEL" -a "x$OS_PLATFORM" = "xx86_64" ]; then
	
	    wget -nv ${sourceURL}/packages/${runMode}/${archive}
	    tar xzf ${archive}
	    mkdir ncbi
	    mv blast-${version}/bin ncbi/build
	
	else 
	
	    wget -nv ${sourceURL}/packages/${runMode}/${archive}
	    tar xzf ncbi-$VERSION.tar.gz
	    rm ${archive}
	    mv ncbi-${version} ncbi
	    
	    # build and install
	    #   sometimes we need to run the make multiple times, as NCBI's makefiles
	    #   are confusing themselves during dependency resolution
	    ./ncbi/make/makedis.csh || ./ncbi/make/makedis.csh \
	        || ./ncbi/make/makedis.csh || ./ncbi/make/makedis.csh
	    
	fi
	
	mkdir -p $APPLICATION_DIR/apps/${package}/${version}
	cd ncbi/build/
	for APP in bl2seq blastall blastpgp fastacmd formatdb; do
	    cp ${APP} $APPLICATION_DIR/apps/${package}/${version}/
	    ln -s -f $APPLICATION_DIR/apps/${package}/${version}/$APP $APPLICATION_DIR/bin/$APP
	done

}

echo "Starting install of ${package}"
if setup > $APPLICATION_DIR/logs/${package}.build.log 2>&1 && install >> $APPLICATION_DIR/logs/${package}.build.log 2>&1; then
    echo "Success build of ${package}"
else
    echo "Build failed with exit code $?. 100 lines of output:"
    tail -n 100 $APPLICATION_DIR/logs/${package}.build.log
    APP_RC=1
fi


