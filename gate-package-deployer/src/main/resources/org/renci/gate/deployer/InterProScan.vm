#!/bin/bash

function setup() {

	# first some basic setup
	mkdir -p $APPLICATION_DIR
	mkdir -p $APPLICATION_DIR/apps
	mkdir -p $APPLICATION_DIR/bin
	mkdir -p $APPLICATION_DIR/logs
	mkdir -p $APPLICATION_DIR/src

	for BINARY in `ls -al $APPLICATION_DIR/bin | grep "${package}/${version}"`; do
		rm $APPLICATION_DIR/bin/$BINARY
	done

	# install the environement files
	pushd $APPLICATION_DIR; rm -f setup.sh; wget -q ${sourceURL}/environment/setup.sh; popd

}

function install() {

	# we depend on the perl-modules
	export PERLLIB=`find $APPLICATION_DIR/apps/perl-modules -type d -name '*thread*' -o -name '5*' | sort | uniq | xargs | sed 's/ /:/g'`
	
	# set up directories
	rm -rf $APPLICATION_DIR/src/${package}/*
	mkdir -p $APPLICATION_DIR/src/${package}
	rm -rf $APPLICATION_DIR/apps/${package}
	mkdir -p $APPLICATION_DIR/apps/${package}
	
	cd $APPLICATION_DIR/src/${package}
	
	wget -nv $SRC_URL/packages/${runMode}/iprscan_v${VERSION}.tar.gz
	tar xzf iprscan_v${VERSION}.tar.gz
	
	wget -nv $SRC_URL/packages/${runMode}/iprscan_bin4.x_Linux.tar.gz
	tar xzf iprscan_bin4.x_Linux.tar.gz
	mv iprscan ${version}
	
	# install (which is copy, and then config)
	rm -rf $APPLICATION_DIR/apps/${package}/${version}
	mkdir -p $APPLICATION_DIR/apps/${package}
	cp -a $VERSION $APPLICATION_DIR/apps/${package}/${version}

	# we need our own fake rsh
	mkdir -p $APPLICATION_DIR/apps/iprscan/fakersh
	echo "#!/bin/bash" >$APPLICATION_DIR/apps/iprscan/fakersh/rsh
	echo "sh -c \"\$2 \$3 \$4\"" >>$APPLICATION_DIR/apps/iprscan/fakersh/rsh
	chmod 755 $APPLICATION_DIR/apps/iprscan/fakersh/rsh
	export PATH=$APPLICATION_DIR/apps/iprscan/fakersh:$PATH
	
	cd $APPLICATION_DIR/apps/iprscan/$VERSION
	ln -s -f $DATABASE_DIR/interproscan/db/iprscan/data data
	
	cd $APPLICATION_DIR/apps/iprscan/$VERSION
	./Config.pl <<EOF
y
y
$APPLICATION_DIR/apps/iprscan/$VERSION
n
y
10
y
1000
100
10000
5
50
0
y
n




























n
n
n
EOF
	
	# fix tmp location
	cd $APPLICATION_DIR/apps/iprscan/$VERSION
	rm -rf tmp
	ln -s $DATABASE_DIR/iprscan/tmp tmp
	
	
	# symlinks
	for BINARY in iprscan; do
	    ln -s -f $APPLICATION_DIR/apps/iprscan/$VERSION/bin/$BINARY $APPLICATION_DIR/bin/$BINARY
	done

}


echo "Starting install of ${package}"
if setup > $APPLICATION_DIR/logs/${package}.build.log 2>&1 && install >> $APPLICATION_DIR/logs/${package}.build.log 2>&1; then
    echo "Success build of ${package}"
else
    echo "Build failed with exit code $?. 100 lines of output:"
    tail -n 100 $APPLICATION_DIR/logs/${package}.build.log
    APP_RC=1
fi


VERSION=4.3.1



