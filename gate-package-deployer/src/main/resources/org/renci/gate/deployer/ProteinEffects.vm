
function setup() {

	# first some basic setup
	mkdir -p $APPLICATION_DIR
	mkdir -p $APPLICATION_DIR/apps
	mkdir -p $APPLICATION_DIR/bin
	mkdir -p $APPLICATION_DIR/logs
	mkdir -p $APPLICATION_DIR/src

	for BINARY in `ls -al $APPLICATION_DIR/bin | grep "${package}/${version}"`; do
		rm $APPLICATION_DIR/bin/$BINARY
	done

	# install the environement files
	pushd $APPLICATION_DIR; rm -f setup.sh; wget -q ${sourceURL}/environment/setup.sh; popd

}

function install() {

	# set up directories
	rm -rf $APPLICATION_DIR/apps/${package}
	mkdir -p $APPLICATION_DIR/apps/${package}
	
	rm -f $APPLICATION_DIR/bin/${package}
	
	# untar
	cd $APPLICATION_DIR/apps/${package}
	wget -nv $SRC_URL/packages/${runMode}/${archive}
	
	tar -xzf ${archive}
	rm ${archive}
	
	chmod 755 $APPLICATION_DIR/apps/${package}/proteineffects
	
	ln -s $APPLICATION_DIR/apps/${package}/proteineffects $APPLICATION_DIR/bin/proteineffects

}

echo "Starting install of ${package}"
if setup > $APPLICATION_DIR/logs/${package}.build.log 2>&1 && install >> $APPLICATION_DIR/logs/${package}.build.log 2>&1; then
    echo "Success build of ${package}"
else
    echo "Build failed with exit code $?. 100 lines of output:"
    tail -n 100 $APPLICATION_DIR/logs/${package}.build.log
    APP_RC=1
fi




